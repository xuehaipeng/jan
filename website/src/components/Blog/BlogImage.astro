---
export interface Props {
  src: string;
  alt: string;
  caption?: string;
  width?: number;
  height?: number;
  loading?: 'lazy' | 'eager';
  class?: string;
}

const {
  src,
  alt,
  caption,
  width,
  height,
  loading = 'lazy',
  class: className = ''
} = Astro.props;

// Handle different image path formats
let imageSrc = src;

// If the path starts with ./ or ../, it's a relative path from the MDX file
if (src.startsWith('./') || src.startsWith('../')) {
  // Remove the leading ./ or ../
  imageSrc = src.replace(/^\.\.?\//, '');

  // Prepend the blog content path if it doesn't include it
  if (!imageSrc.includes('/content/blog/')) {
    imageSrc = `/src/content/blog/${imageSrc}`;
  }
} else if (!src.startsWith('http') && !src.startsWith('/')) {
  // For paths without ./ prefix, assume they're relative to blog content
  imageSrc = `/src/content/blog/${src}`;
}
---

<figure class={`blog-image-container ${className}`}>
  <img
    src={imageSrc}
    alt={alt}
    width={width}
    height={height}
    loading={loading}
    class="blog-image"
  />
  {caption && (
    <figcaption class="blog-image-caption">{caption}</figcaption>
  )}
</figure>

<style>
  .blog-image-container {
    margin: 2rem 0;
    text-align: center;
    width: 100%;
  }

  .blog-image {
    max-width: 100%;
    height: auto;
    display: block;
    margin: 0 auto;
    border-radius: 0.75rem;
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.1),
      0 2px 4px -1px rgba(0, 0, 0, 0.06);
    border: 1px solid var(--sl-color-gray-5);
    background: var(--sl-color-bg);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .blog-image:hover {
    transform: scale(1.01);
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.1),
      0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  .blog-image-caption {
    margin-top: 0.75rem;
    font-size: 0.875rem;
    color: var(--sl-color-text-muted);
    font-style: italic;
    line-height: 1.5;
    padding: 0 1rem;
  }

  /* Loading state */
  .blog-image[loading="lazy"] {
    background: linear-gradient(
      90deg,
      var(--sl-color-gray-5) 0%,
      var(--sl-color-gray-4) 50%,
      var(--sl-color-gray-5) 100%
    );
    background-size: 200% 100%;
    animation: shimmer 1.5s infinite;
  }

  @keyframes shimmer {
    0% {
      background-position: 200% 0;
    }
    100% {
      background-position: -200% 0;
    }
  }

  /* Dark mode adjustments */
  :global(.dark) .blog-image {
    box-shadow:
      0 4px 6px -1px rgba(0, 0, 0, 0.3),
      0 2px 4px -1px rgba(0, 0, 0, 0.2);
    border-color: var(--sl-color-gray-6);
  }

  :global(.dark) .blog-image:hover {
    box-shadow:
      0 10px 15px -3px rgba(0, 0, 0, 0.4),
      0 4px 6px -2px rgba(0, 0, 0, 0.2);
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .blog-image-container {
      margin: 1.5rem 0;
    }

    .blog-image {
      border-radius: 0.5rem;
    }

    .blog-image-caption {
      font-size: 0.8125rem;
      padding: 0 0.5rem;
    }
  }

  @media (max-width: 480px) {
    .blog-image-container {
      margin: 1rem 0;
    }

    .blog-image {
      border-radius: 0.375rem;
    }
  }

  /* Full-width variant */
  .blog-image-container.full-width {
    margin-left: calc(-50vw + 50%);
    margin-right: calc(-50vw + 50%);
    max-width: 100vw;
  }

  .blog-image-container.full-width .blog-image {
    border-radius: 0;
    max-width: min(100%, 1400px);
  }

  /* Inline variant for small icons/images */
  .blog-image-container.inline {
    display: inline-block;
    margin: 0 0.25rem;
    vertical-align: middle;
  }

  .blog-image-container.inline .blog-image {
    display: inline-block;
    max-height: 1.5em;
    width: auto;
    border: none;
    box-shadow: none;
    border-radius: 0;
    margin: 0;
  }

  .blog-image-container.inline .blog-image:hover {
    transform: none;
    box-shadow: none;
  }

  /* Gallery variant */
  .blog-image-container.gallery {
    display: inline-block;
    width: calc(50% - 0.5rem);
    margin: 0.5rem 0.25rem;
  }

  @media (max-width: 768px) {
    .blog-image-container.gallery {
      width: 100%;
      margin: 1rem 0;
    }
  }

  /* Error state */
  .blog-image.error {
    background: var(--sl-color-gray-5);
    min-height: 200px;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .blog-image.error::after {
    content: 'üñºÔ∏è Image not found';
    position: absolute;
    color: var(--sl-color-text-muted);
    font-size: 0.875rem;
  }
</style>

<script>
  // Handle image loading errors
  document.addEventListener('DOMContentLoaded', () => {
    const images = document.querySelectorAll('.blog-image');

    images.forEach(img => {
      img.addEventListener('error', function() {
        this.classList.add('error');
        this.alt = 'Image could not be loaded';
      });
    });
  });
</script>
